#!/usr/bin/env bash

#/ NAME
#/     boxcar-virtualbox - Packer virtualbox provisioning script

function remote_build {
  set -exfu; cd

  virtualbox_install
  container_build "$BUILD_IMAGE_PHASE"
}

function remote_install {
  set -exfu; cd

  virtualbox_install
}

function container_build {
  local nm_distro="$1"; shift
  local prefix=""

  # minimal install
  # already done with Packer

  # workarounds
  # none needed

  # http cache/proxy
  # not sure what the virtualbox host looks like

  # update install with server distribution
  # already done with Packer

  # complete list of apt repos
  local tmp_sources="$(mktemp -t XXXXXX)"
  cat > $tmp_sources << __EOF
deb http://security.ubuntu.com/ubuntu ${nm_distro}-security main restricted universe multiverse
deb http://us.archive.ubuntu.com/ubuntu/ ${nm_distro} main restricted universe multiverse
deb http://us.archive.ubuntu.com/ubuntu/ ${nm_distro}-backports main restricted universe multiverse
deb http://us.archive.ubuntu.com/ubuntu/ ${nm_distro}-updates main restricted universe multiverse
__EOF
  sudo cp "$tmp_sources" $prefix/etc/apt/sources.list
  sudo chmod 0644 $prefix/etc/apt/sources.list
  rm -f "$tmp_sources"
  sudo aptitude update

  # create ubuntu user
  # already done with Packer

  # allow vagrant ssh using insecure key
  sudo install -d -m 0700 $prefix/home/ubuntu/.ssh
  echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key" | sudo tee $prefix/home/ubuntu/.ssh/authorized_keys
  sudo chmod 600 $prefix/home/ubuntu/.ssh/authorized_keys
  sudo chown -R ubuntu:ubuntu $prefix/home/ubuntu

  # sudoer permissions
  local tmp_sudo="$(mktemp -t XXXXXX)"
  cat > $tmp_sudo <<__EOF
ubuntu ALL=(ALL) NOPASSWD: ALL
__EOF
  sudo cp "$tmp_sudo" $prefix/etc/sudoers.d/90-cloud-init-users
  sudo chmod 0400 $prefix/etc/sudoers.d/90-cloud-init-users
  rm -f "$tmp_sudo"

  # cleanup
  sudo rm -rf /etc/udev/rules.d/70-persistent-net.rules /lib/udev/rules.d/75-persistent-net-generator.rules /dev/.udev /var/lib/dhcp3
  sudo mkdir -p /etc/udev/rules.d/70-persistent-net.rules
  sudo aptitude clean
}

function virtualbox_install {
  true
}

# entry point
function main {
  BUILD_IMAGE_PHASE=precise
  exec 2>&1
  echo ubuntu | sudo -S true
  remote_build "$@"
}

main "$@"
