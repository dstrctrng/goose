#!/usr/bin/env bash

#/ NAME
#/     boxcar-virtualbox - Packer virtualbox provisioning script

function remote_build {
  set -exfu

  BUILD_IMAGE_PHASE=precise
  exec 2>&1
  echo ubuntu | sudo -S true

  container_build "$BUILD_IMAGE_PHASE"
}

function container_build {
  local nm_distro="$1"; shift
  local prefix=""
  local sudo="sudo"

  # minimal install
  source /etc/lsb-release
  sudo -E env DEBIAN_FRONTEND=noninteractive aptitude -y install -t "${DISTRIB_CODENAME}-backports" debootstrap

  # sudo permissions
  local tmp_sudo="$(mktemp -t XXXXXX)"
  cat > $tmp_sudo <<__EOF
# ubuntu user is default user in cloud-images.
# It needs passwordless sudo functionality.
ubuntu ALL=(ALL) NOPASSWD:ALL
__EOF

  sudo install -o root -g root -m 0400 "$tmp_sudo" $prefix/etc/sudoers.d/90-cloud-init-users
  rm -f "$tmp_sudo"

  # cloud init
  local tmp_cloud="$(mktemp -t XXXXXX)"
  sudo mkdir -p $prefix/var/lib/cloud/seed/nocloud
  cat > $tmp_cloud << __EOF
instance-id: precise
local-hostname: precise
public-keys:
  vagrant: [$(curl https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub), '']
__EOF
  sudo install -o root -g root -m 0600 $tmp_cloud $prefix/var/lib/cloud/seed/nocloud/meta-data

  cat > $tmp_cloud  << __EOF
#cloud-config
apt_pipelining: 4
__EOF
  sudo install -o root -g root -m 0600 $tmp_cloud $prefix/var/lib/cloud/seed/nocloud/user-data

  rm -f $tmp_cloud

  # run and verify cloud init
  ${sudo} cloud-init start-local || true
  ${sudo} cloud-init-cfg all config
  ${sudo} cloud-init-cfg all final
  ${sudo} id -a ubuntu
  ${sudo} sudo id -a ubuntu
  ${sudo} cat /root/.ssh/authorized_keys /home/ubuntu/.ssh/authorized_keys
  sudo rm -f $prefix/var/lib/cloud/seed/nocloud/meta-data

  # cleanup
  sudo rm -rf /etc/udev/rules.d/70-persistent-net.rules /lib/udev/rules.d/75-persistent-net-generator.rules /dev/.udev /var/lib/dhcp3
  sudo mkdir -p /etc/udev/rules.d/70-persistent-net.rules
  ${sudo} aptitude clean
}

if [[ "$#" = 0 ]]; then
  remote_build
  exit $?
fi

# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source _jason
require _boxcar
require _boxcar_opt

bootstrap="$BASH_SOURCE"

# entry point
function main {
  local pth_ssh_config="$1"

  case "${BUILD_IMAGE_PHASE:-}" in
    install)
      true
      ;;
    *)
      standard_hook "$bootstrap" "$@"
      ;;
  esac
}

require sub "$BASH_SOURCE" "$@"
