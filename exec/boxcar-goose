#!/usr/bin/env bash

#/ NAME
#/     boxcar-goose - set up the golden goose for image building

function remote_install {
  set -exfu; cd

  sudo aptitude install -y libxml2-dev libxslt-dev
  sudo aptitude install -y unzip
  sudo aptitude install -y figlet

  env LANG=C sudo aptitude install -y openjdk-7-jre-headless

  if [[ -f /etc/profile.d/rvm.sh ]]; then
    set +efu
    source /etc/profile.d/rvm.sh
    rvm use 1.9.3
    set -efu

  else
    sudo aptitude install -y ruby1.9.3 ruby1.9.1-full
    sudo gem1.9.3 install bundler
  fi

  sudo install -o ubuntu -g ubuntu -d -m 0755 /opt/goose
  git clone git@github.com:destructuring/goose /opt/goose
  cd /opt/goose
  cp config/aws.yml.example config/aws.yml
  make

  local pth_docker="$(which docker 2>&- || true)"
  if [[ -x "$pth_docker" ]]; then
    bin/shell vagrant box add precise boxes/docker.box
  fi

  bin/shell vagrant box add precise boxes/aws.box
  bin/shell vagrant box add static boxes/static.box
}

if [[ "$#" = 0 ]]; then
  remote_install
  exit $?
fi


# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source _jason
require _boxcar
require _boxcar_opt

bootstrap="$BASH_SOURCE"

# entry point
function main {
  local pth_ssh_config="$1"

  standard_hook "$bootstrap" "$@"
}

require sub "$BASH_SOURCE" "$@"
