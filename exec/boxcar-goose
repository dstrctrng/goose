#!/usr/bin/env bash

#/ NAME
#/     boxcar-goose - set up the golden goose for image building

function remote_install {
  set -exfu

  case "$(uname -s)" in
    Linux)
      sudo -E aptitude update
      sudo -E aptitude install -y flex
      ;;
  esac

  export PKG_HOME="$(pwd)/pkg"

  PATH="$PKG_HOME/bin:$PKG_HOME/sbin:$PATH"

  mkdir -p goose || sudo install -o $(id -un) -g $(id -gn) -d -m 0755 goose
  rm -rf goose || true
  git clone https://github.com/destructuring/goose goose
  cd goose
  cp config/aws.yml.example config/aws.yml

  source ../yarvm/libexec/_yarvm
  make

  bin/shell vagrant box add static boxes/static.box || true
  bin/shell vagrant box add precise boxes/docker.box || true
  bin/shell vagrant box add precise boxes/aws.box || true
  bin/shell vagrant box add precise boxes/static.box || true
  bin/shell vagrant box add precise-clean boxes/static.box || true
}

if [[ "$#" = 0 ]]; then
  remote_install
  exit $?
fi


# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source _jason
require _boxcar
require _boxcar_opt

bootstrap="$BASH_SOURCE"

# entry point
function main {
  local pth_ssh_config="$1"

  standard_hook "$bootstrap" "$@"
}

require sub "$BASH_SOURCE" "$@"
