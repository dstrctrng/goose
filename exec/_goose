#!/usr/bin/env bash

export GOOSE="${GOOSE:=$(unset CDPATH; cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)}"
export VAULT="${VAULT:=$(unset CDPATH; cd -P -- "$GOOSE/.." && pwd -P)/vault}"
export PKG_HOME="${PKG_HOME:=$(unset CDPATH; cd -P -- "$GOOSE/.." && pwd -P)/pkg}"
export GOOSE="${GOOSE:=$(unset CDPATH; cd -P -- "$GOOSE/.." && pwd -P)/goose}"

export BOXCAR="$GOOSE"

export PORT_SSHD_FILE="$GOOSE/config/sshd.port"
export PORT_PROXY_FILE="$GOOSE/config/proxy.port"
export SSH_AGENT_FILE="$GOOSE/config/ssh_agent"

export VBOX_USER_HOME="$GOOSE/.vagrant.d"
export VAGRANT_HOME="$GOOSE/.vagrant.d"
export VAGRANT_I_KNOW_WHAT_IM_DOING_PLEASE_BE_QUIET=1

function require_ {
  source "$GOOSE/vendor/projects/boxcar/libexec/_boxcar"
}

require_

export PATH="$GOOSE/bin:$PKG_HOME/bin:$PKG_HOME/sbin:$PATH"

unset BUNDLE_GEMFILE RUBYOPT

export DOCKER_OPT=
export DOCKER_CMD=/sbin/init

: ${AWS_DEFAULT_REGION:=us-west-1}
export AWS_DEFAULT_REGION

export EC2_URL="ec2.${AWS_DEFAULT_REGION}.amazonaws.com"

export AWS_DEFAULT_OUTPUT="json"

export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_KEY:-"$(aws configure get aws_secret_access_key)"}"
if [[ -z "$AWS_SECRET_ACCESS_KEY" ]]; then
  logger_fatal "specify your aws secret key in environment variable AWS_SECRET_ACCESS_KEY or aws configure"
  exit 1
fi

export AWS_SECRET_KEY=$AWS_SECRET_ACCESS_KEY

export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY:-"$(aws configure get aws_access_key_id)"}"
if [[ -z "$AWS_ACCESS_KEY_ID" ]]; then
  logger_fatal "specify your aws access key in environment variable AWS_ACCESS_KEY_ID or aws configure"
  exit 1
fi

export AWS_ACCESS_KEY=$AWS_ACCESS_KEY_ID

complete -C aws_completer aws
