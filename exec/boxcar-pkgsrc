#!/usr/bin/env bash

#/ NAME
#/     boxcar-pkgsrc - builds and installs pkgsrc for boxcar

function remote_install {
  set -exfu; cd

  if [[ "$(uname -s)" = "Linux" ]]; then
    sudo aptitude update
    sudo aptitude install -y build-essential
  fi

  if [[ "$BUILD_IMAGE_PHASE" != "install" ]]; then
    cd "$BUILD_IMAGE_PHASE"
  fi

  export VAULT="$(pwd)/vault"
  export PKG_HOME="$(pwd)/pkg"

  PATH="$PKG_HOME/bin:$PKG_HOME/sbin:$PATH"

  rm -rf pkgsrc pkg
  git clone git@github.com:destructuring/pkgsrc pkgsrc

  cd pkgsrc
  make -f Makefile.goose SH=/bin/bash bmake
  make -f Makefile.goose SH=/bin/bash "$PKG_HOME/bin/bmake"
  make -f Makefile.goose SH=/bin/bash packages
  make -f Makefile.goose SH=/bin/bash cache
}

if [[ "$#" = 0 ]]; then
  remote_install
  exit $?
fi


# figure out the project root under which bin, lib live
shome="$(unset CDPATH; cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source _jason
require _boxcar
require _boxcar_opt

bootstrap="$BASH_SOURCE"

# entry point
function main {
  local pth_ssh_config="$1"

  local install=""
  if [[ "$BUILD_IMAGE_PHASE" != "install" ]]; then
    intall="$BUILD_IMAGE_PHASE/"
  fi

  ssh -F $pth_ssh_config default mkdir -p ${install}vault
  rsync -ia -e "ssh -F $pth_ssh_config" $VAULT/distfiles default:${install}vault/
  standard_hook "$bootstrap" "$@"
}

require sub "$BASH_SOURCE" "$@"
